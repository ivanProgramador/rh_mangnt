No caso a mecanica de salvamento em duas tebales até aqui paerce algo simples de se fazer,
porque eu posso abordar isso de forma procedural dentro do metodo de criação  


public function createRhColaborator(Request $request){

      Auth::user()->can('admin')?:abort('403','Você não esta autorizado a acessar');

      //validando formulario 

      $request->validate([
          'name'=>'required|string|max:255',
          'email'=>'required|email|max:255|unique:users,email',
          'select_department'=>'required|exists:departments,id',
          'address'=>'required|string|max:255',
          'zip_code'=>'required|string|max:10',
          'city'=>'required|string|max:50',
          'phone'=>'required|string|max:20',
          'salary'=>'required|decimal:2',
          'admission_date'=>'required|date_format:y-m-d'
      ]);

      //criando o novo usuario do rh 

      $user = new User();
      $user->name = $request->name;
      $user->email = $request->email;
      $user->role = 'rh';
      $user->department_id = $request->select_department;
      $user->permissions = '["rh"]';
      $user->save();

      //gravando os datelhes do usuario na tabela user_details

      $user->detail()->create([
        'address'=>$request->address,
        'zip_code'=>$request->zip_code,
        'city'=>$request->city,
        'phone'=>$request->phone,
        'salary'=>$request->salary,
        'admission_date'=>$request->admission_date
      ]);   
      

      //retornando para a view 

      return redirect()->route('colaborators.rh-users')->with('success','Colaborador cadastrado');

     


      
      

    }